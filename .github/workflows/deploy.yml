name: Deploy production

on:
  push:
    branches: [ main ]


jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - run: docker login ghcr.io -u $GITHUB_ACTOR -p ${{ secrets.TOKEN }}
      - run: docker build -t ghcr.io/$GITHUB_ACTOR/template-bot:latest -t ghcr.io/$GITHUB_ACTOR/template-bot:$GITHUB_SHA .
      - run: docker image push ghcr.io/$GITHUB_ACTOR/template-bot:$GITHUB_SHA
      - run: docker image push ghcr.io/$GITHUB_ACTOR/template-bot:latest

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    env:
      SSH_KEY_PATH: /tmp/ssh_key.txt
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Make envfile
        run: export | grep "secret_" | sed "s/declare -x secret_//" > .env
        env:
          secret_USER_BOT_TOKEN: ${{ secrets.USER_BOT_TOKEN }}
          secret_PYTHONPATH: /app
      - run: echo "GITHUB_SHA=$GITHUB_SHA" >> .env
      - run: echo "${{ secrets.PRODUCTION_SSH_KEY }}" > ${{ env.SSH_KEY_PATH }} && chmod 600 ${{ env.SSH_KEY_PATH }}
      - run: scp -o StrictHostKeyChecking=no -i ${{ env.SSH_KEY_PATH }} .env ${{ secrets.PRODUCTION_SSH_USERNAME }}@${{ secrets.PRODUCTION_SSH_HOST }}:/app/.env
      - run: scp -o StrictHostKeyChecking=no -i ${{ env.SSH_KEY_PATH }} docker-compose.yml ${{ secrets.PRODUCTION_SSH_USERNAME }}@${{ secrets.PRODUCTION_SSH_HOST }}:/app/docker-compose.yml
      - run: ssh -i ${{ env.SSH_KEY_PATH }} ${{ secrets.PRODUCTION_SSH_USERNAME }}@${{ secrets.PRODUCTION_SSH_HOST }} "docker login ghcr.io -u $GITHUB_ACTOR -p ${{ secrets.TOKEN }} && docker pull ghcr.io/$GITHUB_ACTOR/template-bot:$GITHUB_SHA && docker-compose -f /app/docker-compose.yml --env-file=/app/.env up -d && docker system prune --all --force"

